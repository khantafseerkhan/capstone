{"version":3,"sources":["inc-decReducer.js"],"names":["initialstate","value","allproductdata","cartProduct","localStorage","getItem","JSON","parse","totalOfall","coupon","length","giftCard","etax","shippingCharge","cartCount","shippingDetails","shippingInfo","email","phone","country","fname","lname","address1","address2","state","zip","charge","deliverymethod","cardnumber","paymentInfo","cardholdername","changeTheState","arguments","undefined","type","updateproductslist","action","console","log","data","temparray","index","findIndex","x","id","quantity","setItem","stringify","updateCartProduct","splice","calPriceSummary","temp","shippingMethod","inputdata","forEach","element","price"],"mappings":"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","file":"inc-decReducer.min.js","sourcesContent":["\nlet initialstate = {\n\n  value: 10,\n  allproductdata: [],\n  cartProduct: localStorage.getItem(\"cartdata\") ? JSON.parse(localStorage.getItem(\"cartdata\")) : [],\n  totalOfall: localStorage.getItem(\"totalofall\") ? localStorage.getItem(\"totalofall\") : 0,\n  coupon: 20,\n  giftCard: 10,\n  etax: 50,\n  shippingCharge: 0,\n  cartCount: localStorage.getItem(\"cartdata\") ? JSON.parse(localStorage.getItem(\"cartdata\")).length :0,\n  shippingDetails: [\n    {\n      shippingInfo: {\n        email: \"\",\n        phone: \"\",\n        country: \"\",\n        fname: \"\",\n        lname: \"\",\n        address1: \"\",\n        address2: \"\",\n        city: \"\",\n        state: \"\",\n        zip: \"\",\n      },\n      shippingMethod:{\n        deliverymethod:\"\",\n        charge:0\n      },\n      paymentInfo:{\n        cardholdername:\"\",\n        cardnumber:\"\",\n        expiry:\"\",\n        cvv:\"\"\n      }\n    }\n\n  ]\n\n}\n\n\n\n\nexport const changeTheState = (state = initialstate, action) => {\n  switch (action.type) {\n    case 'Increament':\n      return { value: state.value + 1 }\n    case 'Decrement':\n      return { value: state.value - 1 }\n    default:\n      return state\n  }\n}\n\n\nexport const updateproductslist = (state = initialstate, action) => {\n\n  if (action.type == \"updateproductslist\") {\n    console.log(\"length   =\" + action.data.length)\n    return {\n      value: state.value,\n      allproductdata: action.data\n    }\n  } else {\n    return state;\n  }\n}\nexport const updateCartProduct = (state = initialstate, action) => {\n\n\n  if (action.type == \"add\") {\n    let temparray = state.cartProduct;\n\n    let index = temparray.findIndex(x => x.id == action.data.id);\n    if (index != -1) {\n\n      temparray[index].quantity = temparray[index].quantity + action.data.quantity;\n\n      localStorage.setItem(\"cartdata\", JSON.stringify(temparray))\n      localStorage.setItem(\"totalofall\", calPriceSummary(temparray))\n\n      return {\n        value: state.value,\n        allproductdata: state.allproductdata,\n        cartProduct: temparray,\n        totalOfall: calPriceSummary(temparray),\n        coupon: state.coupon,\n        giftCard: state.giftCard,\n        etax: state.etax,\n        shippingCharge: state.shippingCharge,\n        cartCount: temparray.length,\n        shippingDetails: state.shippingDetails\n\n      }\n\n\n\n    } else {\n      temparray.push(action.data);\n\n      localStorage.setItem(\"cartdata\", JSON.stringify(temparray))\n      localStorage.setItem(\"totalofall\", calPriceSummary(temparray))\n      return {\n        value: state.value,\n        allproductdata: state.allproductdata,\n        cartProduct: temparray,\n        totalOfall: calPriceSummary(temparray),\n        coupon: state.coupon,\n        giftCard: state.giftCard,\n        etax: state.etax,\n        shippingCharge: state.shippingCharge,\n        cartCount: temparray.length,\n        shippingDetails: state.shippingDetails\n\n\n\n      }\n\n    }\n  } else if (action.type == \"update\") {\n    return state\n  } else if (action.type == \"remove\") {\n    let temparray = state.cartProduct;\n\n    if (action.data != -1) {\n\n      temparray.splice(action.data, 1);\n\n      localStorage.setItem(\"cartdata\", JSON.stringify(temparray))\n      localStorage.setItem(\"totalofall\", calPriceSummary(temparray))\n\n      return {\n        value: state.value,\n        allproductdata: state.allproductdata,\n        cartProduct: temparray,\n        totalOfall: calPriceSummary(temparray),\n        coupon: state.coupon,\n        giftCard: state.giftCard,\n        etax: state.etax,\n        shippingCharge: state.shippingCharge,\n        cartCount: temparray.length,\n        shippingDetails: state.shippingDetails\n\n\n      }\n    } else {\n      return state;\n    }\n  } else if (action.type == \"incQuantity\") {\n    let temparray = state.cartProduct;\n    let index = temparray.findIndex(x => x.id == action.data);\n    temparray[index].quantity = temparray[index].quantity + 1;\n\n    localStorage.setItem(\"cartdata\", JSON.stringify(temparray))\n    localStorage.setItem(\"totalofall\", calPriceSummary(temparray))\n\n    return {\n      value: state.value,\n      allproductdata: state.allproductdata,\n      cartProduct: temparray,\n      totalOfall: calPriceSummary(temparray),\n      coupon: state.coupon,\n      giftCard: state.giftCard,\n      etax: state.etax,\n      shippingCharge: state.shippingCharge,\n      cartCount: temparray.length,\n      shippingDetails: state.shippingDetails\n\n\n\n    }\n  } else if (action.type == \"decQuantity\") {\n    let temparray = state.cartProduct;\n    let index = temparray.findIndex(x => x.id == action.data);\n    if (temparray[index].quantity > 1) {\n      temparray[index].quantity = temparray[index].quantity - 1;\n\n      localStorage.setItem(\"cartdata\", JSON.stringify(temparray))\n      localStorage.setItem(\"totalofall\", calPriceSummary(temparray))\n\n      return {\n        value: state.value,\n        allproductdata: state.allproductdata,\n        cartProduct: temparray,\n        totalOfall: calPriceSummary(temparray),\n        coupon: state.coupon,\n        giftCard: state.giftCard,\n        etax: state.etax,\n        shippingCharge: state.shippingCharge,\n        cartCount: temparray.length,\n        shippingDetails: state.shippingDetails\n\n\n\n\n      }\n    }\n\n  } else if (action.type == \"insetshippingInfo\") {\n    let temp = state.shippingDetails;\n    temp[0].shippingInfo = action.data;\n    return {\n\n\n      value: state.value,\n      allproductdata: state.allproductdata,\n      cartProduct: state.cartProduct,\n      totalOfall: state.totalOfall,\n      coupon: state.coupon,\n      giftCard: state.giftCard,\n      etax: state.etax,\n      shippingCharge: state.shippingCharge,\n      cartCount: state.cartCount,\n      shippingDetails: temp\n\n\n\n    }\n  }else if (action.type == \"insertshippingMethod\") {\n    let temp = state.shippingDetails;\n    temp[0].shippingMethod = action.data;\n    // email: state.value,\n    // phone: state.allproductdata,\n    // country: temparray,\n    // fname: calPriceSummary(temparray),\n    // lname: state.coupon,\n    // address1: state.giftCard,\n    // address2: state.etax,\n    // city: state.shippingCharge,\n    // state: temparray.length,\n    // zip:state.shippingDetails\n    return {\n\n\n      value: state.value,\n      allproductdata: state.allproductdata,\n      cartProduct: state.cartProduct,\n      totalOfall: state.totalOfall,\n      coupon: state.coupon,\n      giftCard: state.giftCard,\n      etax: state.etax,\n      shippingCharge: temp[0].shippingMethod.charge,\n      cartCount: state.cartCount,\n      shippingDetails: temp\n\n\n\n    }\n  }else if (action.type == \"insertpaymentInfo\") {\n    let temp = state.shippingDetails;\n    temp[0].paymentInfo = action.data;\n    return {\n\n\n      value: state.value,\n      allproductdata: state.allproductdata,\n      cartProduct: state.cartProduct,\n      totalOfall: state.totalOfall,\n      coupon: state.coupon,\n      giftCard: state.giftCard,\n      etax: state.etax,\n      shippingCharge: state.shippingCharge,\n      cartCount: state.cartCount,\n      shippingDetails: temp\n\n\n\n    }\n  }\n\n  else {\n    return state;\n  }\n}\nconst calPriceSummary = (inputdata) => {\n\n  let totalOfall = 0;\n  inputdata.forEach(element => {\n    totalOfall = totalOfall + (element.price * element.quantity);\n  });\n  return totalOfall;\n}\n\n"]}